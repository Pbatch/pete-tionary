schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Message {
  id: String!
  roomName: String!
  round: Int!
  url: String!
  username: String!
  ttl: Int!
}

type MessageConnection {
  items: [Message]
  nextToken: String
}

type Mutation {
  createMessage(input: CreateMessageInput!): Message
  createRoom(roomName: String!): Room
  deleteRoom(roomName: String!): Room
}

type Query {
  getMessage(id: String!): Message
  getRoom(roomName: String!): Room
  listMessages(roomName: String!, round: Int): MessageConnection
  listRooms: RoomConnection
}

type Room {
  roomName: String!
  ttl: Int!
}

type RoomConnection {
  items: [Room]
  nextToken: String
}

type Subscription {
  onCreateMessage(roomName: String): Message
    @aws_subscribe(mutations : ["createMessage"])
  onCreateRoom: Room
    @aws_subscribe(mutations : ["createRoom"])
  onDeleteRoom(roomName: String): Room
    @aws_subscribe(mutations : ["deleteRoom"])
}

input CreateMessageInput {
  roomName: String!
  round: Int!
  url: String!
  username: String!
}
